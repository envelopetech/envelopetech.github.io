{"version":3,"sources":["views/briefcase/index.js"],"names":["createData","name","calories","fat","carbs","rows","descendingComparator","a","b","orderBy","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onSelectAllClick","order","numSelected","rowCount","onRequestSort","padding","indeterminate","checked","onChange","inputProps","map","headCell","key","align","sortDirection","active","direction","onClick","property","event","className","visuallyHidden","useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","clsx","variant","component","aria-label","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","position","top","tablewrapper","marginLeft","marginRight","marginTop","EnhancedTable","React","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","aria-labelledby","size","target","newSelecteds","n","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","style","colSpan","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","value","control"],"mappings":"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","file":"static/js/20.09a94f94.chunk.js","sourcesContent":["// import React from 'react';\r\n// import { withStyles, makeStyles } from '@material-ui/core/styles';\r\n// import Table from '@material-ui/core/Table';\r\n// import TableBody from '@material-ui/core/TableBody';\r\n// import TableCell from '@material-ui/core/TableCell';\r\n// import TableContainer from '@material-ui/core/TableContainer';\r\n// import TableHead from '@material-ui/core/TableHead';\r\n// import TableRow from '@material-ui/core/TableRow';\r\n// import Paper from '@material-ui/core/Paper';\r\n\r\n// const StyledTableCell = withStyles((theme) => ({\r\n//   head: {\r\n//     backgroundColor: theme.palette.common.black,\r\n//     color: theme.palette.common.white,\r\n//   },\r\n//   body: {\r\n//     fontSize: 14,\r\n//   },\r\n// }))(TableCell);\r\n\r\n// const StyledTableRow = withStyles((theme) => ({\r\n//   root: {\r\n//     '&:nth-of-type(odd)': {\r\n//       backgroundColor: theme.palette.action.hover,\r\n//     },\r\n//   },\r\n// }))(TableRow);\r\n\r\n// function createData(name, calories, fat, carbs) {\r\n//   return { name, calories, fat, carbs };\r\n// }\r\n\r\n// const rows = [\r\n//   createData('ABC Pvt Ltd', \"Brochure\", 1.4, \"View\"),\r\n//   createData('BBC Enterprise', \"Video\", 9.0, \"View\"),\r\n//   createData('XYZ Services Pvt Ltd', \"Photo\", 0.8, \"View\"),\r\n//   createData('Cupcake', \"Brochure\", 3.7, \"View\"),\r\n//   createData('Gingerbread', \"Visiting Card\", 16.0, \"View\"),\r\n// ];\r\n\r\n// const useStyles = makeStyles({\r\n//   table: {\r\n//     minWidth: 700,\r\n//   },\r\n//   tablewrapper: {\r\n//     marginLeft: 20,\r\n//     marginRight: 20,\r\n//     marginTop: 20,\r\n//     marginBottom: 20,\r\n//   },\r\n// });\r\n\r\n// export default function Briefcase() {\r\n//   const classes = useStyles();\r\n\r\n//   return (\r\n//     <div className={classes.tablewrapper}>\r\n//     <TableContainer component={Paper} >\r\n//       <Table className={classes.table} aria-label=\"customized table\">\r\n//         <TableHead>\r\n//           <TableRow>\r\n//             <StyledTableCell>Company Name</StyledTableCell>\r\n//             <StyledTableCell align=\"right\">Type</StyledTableCell>\r\n//             <StyledTableCell align=\"right\">Size (mb)</StyledTableCell>\r\n//             <StyledTableCell align=\"right\">Link</StyledTableCell>\r\n//           </TableRow>\r\n//         </TableHead>\r\n//         <TableBody>\r\n//           {rows.map((row) => (\r\n//             <StyledTableRow key={row.name}>\r\n//               <StyledTableCell component=\"th\" scope=\"row\">\r\n//                 {row.name}\r\n//               </StyledTableCell>\r\n//               <StyledTableCell align=\"right\">{row.calories}</StyledTableCell>\r\n//               <StyledTableCell align=\"right\">{row.fat}</StyledTableCell>\r\n//               <StyledTableCell align=\"right\">{row.carbs}</StyledTableCell>\r\n//             </StyledTableRow>\r\n//           ))}\r\n//         </TableBody>\r\n//       </Table>\r\n//     </TableContainer>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nfunction createData(name, calories, fat, carbs) {\r\n  return { name, calories, fat, carbs };\r\n}\r\n\r\nconst rows = [\r\n    createData('ABC Pvt Ltd', \"Brochure\", 1.4, \"View\"),\r\n    createData('BBC Enterprise', \"Video\", 9.0, \"View\"),\r\n    createData('XYZ Services Pvt Ltd', \"Photo\", 0.8, \"View\"),\r\n    createData('Sample Company Inc', \"Brochure\", 3.7, \"View\"),\r\n    createData('Envelope Technologies', \"Visiting Card\", 16.0, \"View\"),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Company Name' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Type' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Size (mb)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Link' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          My Briefcase\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  tablewrapper: {\r\n    marginLeft: 20,\r\n    marginRight: 20,\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.tablewrapper}>\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n    </div>\r\n  );\r\n}"],"sourceRoot":""}